package com.letattung.fluentinterface.lazy;

import java.util.Iterator;

public abstract class DecoratingIterator<E> implements Iterator<E>{

	protected final Iterator<E> fromIterator;
	private E next;
	
	public DecoratingIterator(Iterator<E> fromIterator) {
		this.fromIterator = fromIterator;
	}
	
	@Override
	public final boolean hasNext(){
		next = computeNext();
		return next != null ;
	}
	
	public abstract E computeNext();
}
