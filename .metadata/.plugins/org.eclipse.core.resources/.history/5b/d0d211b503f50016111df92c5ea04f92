package com.letattung.reactor.framework;

import java.io.IOException;
import java.nio.channels.SelectableChannel;
import java.util.Map;
import java.util.Queue;
import java.util.concurrent.ConcurrentHashMap;

public abstract class AbstractNioChannel {

	private final SelectableChannel channel;
	private final ChannelHandler handler;
	private final Map<SelectableChannel, Queue<Object>> PendingWrites = new ConcurrentHashMap<>();
	private NioReactor reactor;
	
	public AbstractNioChannel(SelectableChannel channel, ChannelHandler handler) {
		this.channel = channel;
		this.hander = handler;
	}
	
	void setReactor(NioReactor reactor){
		this.reactor = reactor;
	}
	
	public SelectableChannel getJavaChannel(){
		return channel;
	}
	
	public abstract int getInterestedOps();
	
	public abstract void bind() throws IOException;
	
	public ChannelHandler getHandler(){
		return handler;
	}
}
