package com.letattung.hexagonal.eventlog;

import org.bson.Document;

import com.letattung.hexagonal.domain.PlayerDetails;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

public class MongoEventLog implements LotteryEventLog{

	private static final String DEFAULT_DB = "lotteryDB";
	private static final String DEFAULT_EVENTS_COLLECTION = "events";
	
	private MongoClient mongoClient;
	private MongoDatabase database;
	private MongoCollection<Document> eventsCollection;
	
	private StdOutEventLog stdOutEventLog = new StdOutEventLog();
	
	public MongoEventLog(){
		connect();
	}
	
	public MongoEventLog(String dbName, String eventsCollectionName) {
		connect(dbName, eventsCollectionName);
	}
	
	public void connect(){
		connect(DEFAULT_DB, DEFAULT_EVENTS_COLLECTION);
	}
	
	public void connect(String dbName, String eventsCollectionName){
		
		if (mongoClient != null){
			mongoClient.close();
		}
		mongoClient = new MongoClient(System.getProperty("mongo-host"), 
				Integer.parseInt(System.getProperty("mongo-port")));
		database = mongoClient.getDatabase(dbName);
		eventsCollection = database.getCollection(eventsCollectionName);
	}
	
	public MongoClient getMongoClient() {
		return mongoClient;
	}

	public MongoDatabase getDatabase() {
		return database;
	}

	public MongoCollection<Document> getEventsCollection() {
		return eventsCollection;
	}

	@Override
	public void ticketSubmitted(PlayerDetails details) {
		
	}

	@Override
	public void ticketSubmitError(PlayerDetails details) {
		
	}

	@Override
	public void ticketDidNotWin(PlayerDetails details) {
		
	}

	@Override
	public void ticketWon(PlayerDetails details, int prizeAmount) {
		
	}

	@Override
	public void prizeError(PlayerDetails details, int prizeAmount) {
		
	}

}
